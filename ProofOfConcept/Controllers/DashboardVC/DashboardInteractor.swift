//
//  DashboardInteractor.swift
//  ProofOfConcept
//
//  Created by Yuvraj Sorav on 05/03/20.
//  Copyright (c) 2020 Yuvraj Sorav. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DashboardBusinessLogic
{
    func doSomething(request: Dashboard.Something.Request)
    func doFetchDashBoardData()
}

protocol DashboardDataStore
{
    //var name: String { get set }
}

class DashboardInteractor: DashboardBusinessLogic, DashboardDataStore
{
    var presenter: DashboardPresentationLogic?
    var worker: DashboardWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: Dashboard.Something.Request)
    {
        worker = DashboardWorker()
        worker?.doSomeWork()
        
        let response = Dashboard.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func doFetchDashBoardData() {
        worker?.doFetchDashboardData(completionHandler: { (dashboardModel) in
            do {
                let dashboardMod = try JSONDecoder().decode(DashboardModel.self, from: dashboardModel)
                self.presenter?.presentDashboardData(dashboardMod)
                
            }catch {
                print("Parsing Error \(error.localizedDescription)")
            }
        })
        
    }
}
